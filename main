#include "mbed.h"
#include "stm32l476xx.h"

#define BUFFER_SIZE 128

DigitalOut RedLED(PA_7);
DigitalOut GreenLED(PB_6);
DigitalOut BlueLED(PC_7);
AnalogIn HeartBeatSensor(PA_1);
PwmOut Buzzer(PB_9);

Serial serial(USBTX, USBRX); 
Serial bluetooth(PA_9, PA_10); 


volatile uint8_t buffer[BUFFER_SIZE];
volatile uint8_t bufferIndex = 0;
volatile uint8_t isConnected = 0;



void SendData(char data);
char ReceiveData(void);
void SendString(char* str);

void SendData(char data)
{
    
    while (!(USART1->ISR & USART_ISR_TXE));

    
    USART1->TDR = data;
}


char ReceiveData(void)
{
    
    while (!(USART1->ISR & USART_ISR_RXNE));

    
    char data = USART1->RDR;

    return data;
}

void SendString(char* str)
{

    while (*str)
    {
        SendData(*str++);
    }
}

void onSerialRx(void)
{
    while(serial.readable())
    {
        buffer[bufferIndex++] = serial.getc();

        if(bufferIndex >= BUFFER_SIZE)
        {
            bufferIndex = 0;
        }
    }
}

void onSerialError(void)
{
    serial.clear();
    bufferIndex = 0;
    isConnected = 0;
}

void onBluetoothRx(void)
{
    while(bluetooth.readable())
    {
        serial.putc(bluetooth.getc());
    }
}

void onBluetoothError(void)
{
    bluetooth.clear();
}

void Siren(void)
{
    int i;
     for (i=0; i<32; i=i+2) {
        Buzzer.period(1.0/969.0);
        Buzzer = float(i)/50.0;
        wait(0.5);
        Buzzer.period(1.0/800.0);
        wait(0.5);
    }
}

int main()
{
    serial.baud(9600);
    bluetooth.baud(9600);

    serial.attach(&onSerialRx);
    serial.attach(&onSerialError, Serial::RxOverrunError | Serial::RxParityError | Serial::RxFrameError | Serial::RxNoiseError);

    bluetooth.attach(&onBluetoothRx);
    bluetooth.attach(&onBluetoothError, Serial::RxOverrunError | Serial::RxParityError | Serial::RxFrameError | Serial::RxNoiseError);

    while(1)
    {

         char data = ReceiveData();


        if(!bluetooth.readable() && isConnected)
        {
            //disconnection
            isConnected = 0;
            bufferIndex = 0;
            RedLED = 1;
            Siren();


            
        }
        else if(bluetooth.readable() && !isConnected)
        {
            //connection
            isConnected = 1;
            GreenLED = 1;
            
        }
    }

    
        
}
